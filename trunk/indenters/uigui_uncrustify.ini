[%20header]
categories=General options|Indenting|Spacing options|Code alignment (not left column spaces/tabs)|Newline adding and removing options|Positioning options|Line Splitting options|Blank line options|Code modifying options (non-whitespace)|Comment modifications|Preprocessor options
cfgFileParameterEnding=cr
configFilename=uncrustify.cfg
fileTypes=*.c|*.cpp|*.d|*.cs|*.vala|*.java|*.pawn|*.p|*.sma|*.inl|*.h|*.cxx|*.hpp|*.hxx|*.cc|*.di|*.m|*.sqc
indenterFileName=uncrustify
indenterName=Uncrustify
inputFileName=indentinput
inputFileParameter="-f "
manual=http://uncrustify.sourceforge.net/config.txt
outputFileName=indentoutput
outputFileParameter="-o "
parameterOrder=ipo
showHelpParameter=-h
stringparaminquotes=false
useCfgFileParameter="-c "
version=0.41

[align_assign_span]
CallName="align_assign_span="
Category=3
Description="<html>The span for aligning on '=' in assignments (0=don't align)</html>"
EditorType=numeric
Enabled=false
MaxVal=5000
MinVal=0
Value=0
ValueDefault=0

[align_assign_thresh]
CallName="align_assign_thresh="
Category=3
Description="<html>The threshold for aligning on '=' in assignments (0=no limit)</html>"
EditorType=numeric
Enabled=false
MaxVal=5000
MinVal=0
Value=0
ValueDefault=0

[align_enum_equ_span]
CallName="align_enum_equ_span="
Category=3
Description="<html>The span for aligning on '=' in enums (0=don't align)</html>"
EditorType=numeric
Enabled=false
MaxVal=5000
MinVal=0
Value=0
ValueDefault=0

[align_enum_equ_thresh]
CallName="align_enum_equ_thresh="
Category=3
Description="<html>The threshold for aligning on '=' in enums (0=no limit)</html>"
EditorType=numeric
Enabled=false
MaxVal=5000
MinVal=0
Value=0
ValueDefault=0

[align_func_params]
Category=3
Description=<html>Align variable definitions in prototypes and functions</html>
EditorType=boolean
Enabled=false
TrueFalse="align_func_params=true|align_func_params=false"
Value=0
ValueDefault=0

[align_func_proto_span]
CallName="align_func_proto_span="
Category=3
Description="<html>The span for aligning function prototypes (0=don't align)</html>"
EditorType=numeric
Enabled=false
MaxVal=5000
MinVal=0
Value=0
ValueDefault=0

[align_keep_tabs]
Category=3
Description=<html>Whether to keep non-indenting tabs</html>
EditorType=boolean
Enabled=false
TrueFalse="align_keep_tabs=true|align_keep_tabs=false"
Value=0
ValueDefault=0

[align_nl_cont]
Category=3
Description=<html>Whether to align macros wrapped with a backslash and a newline</html>
EditorType=boolean
Enabled=false
TrueFalse="align_nl_cont=true|align_nl_cont=false"
Value=0
ValueDefault=0

[align_number_left]
Category=3
Description=<html>Whether to left-align numbers</html>
EditorType=boolean
Enabled=false
TrueFalse="align_number_left=true|align_number_left=false"
Value=0
ValueDefault=0

[align_on_tabstop]
Category=3
Description=<html>Whether to bump out to the next tab when aligning</html>
EditorType=boolean
Enabled=false
TrueFalse="align_on_tabstop=true|align_on_tabstop=false"
Value=0
ValueDefault=0

[align_pp_define_gap]
CallName="align_pp_define_gap="
Category=3
Description=<html>The minimum space between label and value of a preprocessor define</html>
EditorType=numeric
Enabled=false
MaxVal=16
MinVal=0
Value=0
ValueDefault=0

[align_pp_define_span]
CallName="align_pp_define_span="
Category=3
Description="<html>The span for aligning on '#define' bodies (0=don't align)</html>"
EditorType=numeric
Enabled=false
MaxVal=5000
MinVal=0
Value=0
ValueDefault=0

[align_right_cmt_span]
CallName="align_right_cmt_span="
Category=3
Description="<html>The span for aligning comments that end lines (0=don't align)</html>"
EditorType=numeric
Enabled=false
MaxVal=5000
MinVal=0
Value=0
ValueDefault=0

[align_struct_init_span]
CallName="align_struct_init_span="
Category=3
Description="<html>The span for aligning struct initializer values (0=don't align)</html>"
EditorType=numeric
Enabled=false
MaxVal=5000
MinVal=0
Value=0
ValueDefault=0

[align_typedef_amp_style]
CallName="align_typedef_amp_style="
Category=3
Description="<html>Controls the positioning of the '&amp;' in typedefs. Just try it.<BR>0: Align on typdef type, ignore '&amp;'<BR>1: The '&amp;' is part of type name: typedef int  &amp;pint;<BR>2: The '&amp;' is part of the type, but dangling: typedef int &amp;pint;</html>"
EditorType=numeric
Enabled=false
MaxVal=2
MinVal=0
Value=0
ValueDefault=0

[align_typedef_func]
CallName="align_typedef_func="
Category=3
Description=<html>How to align typedef'd functions with other typedefs<BR>0: Don't mix them at all<BR>1: align the open paren with the types<BR>2: align the function type name with the other type names</html>
EditorType=numeric
Enabled=false
MaxVal=16
MinVal=0
Value=0
ValueDefault=0

[align_typedef_gap]
CallName="align_typedef_gap="
Category=3
Description=<html>The minimum space between the type and the synonym of a typedef</html>
EditorType=numeric
Enabled=false
MaxVal=16
MinVal=0
Value=0
ValueDefault=0

[align_typedef_span]
CallName="align_typedef_span="
Category=3
Description="<html>The span for aligning single-line typedefs (0=don't align)</html>"
EditorType=numeric
Enabled=false
MaxVal=16
MinVal=0
Value=0
ValueDefault=0

[align_typedef_star_style]
CallName="align_typedef_star_style="
Category=3
Description="<html>Controls the positioning of the '*' in typedefs. Just try it.<BR>0: Align on typdef type, ignore '*'<BR>1: The '*' is part of type name: typedef int  *pint;<BR>2: The '*' is part of the type, but dangling: typedef int *pint;</html>"
EditorType=numeric
Enabled=false
MaxVal=2
MinVal=0
Value=0
ValueDefault=0

[align_var_def_amp_style]
CallName="align_var_def_amp_style="
Category=3
Description="<html>How to align the '&amp;' in variable definitions.<BR> 0=Part of the type<BR> 1=Part of the variable<BR> 2=Dangling</html>"
EditorType=numeric
Enabled=false
MaxVal=2
MinVal=0
Value=0
ValueDefault=0

[align_var_def_colon]
Category=3
Description=<html>Whether to align the colon in struct bit fields</html>
EditorType=boolean
Enabled=false
TrueFalse="align_var_def_colon=true|align_var_def_colon=false"
Value=0
ValueDefault=0

[align_var_def_inline]
Category=3
Description=<html>Whether to align inline struct/enum/union variable definitions</html>
EditorType=boolean
Enabled=false
TrueFalse="align_var_def_inline=true|align_var_def_inline=false"
Value=0
ValueDefault=0

[align_var_def_span]
CallName="align_var_def_span="
Category=3
Description="<html>The span for aligning variable definitions (0=don't align)</html>"
EditorType=numeric
Enabled=false
MaxVal=5000
MinVal=0
Value=0
ValueDefault=0

[align_var_def_star_style]
CallName="align_var_def_star_style="
Category=3
Description="<html>How to align the star in variable definitions.<BR> 0=Part of the type<BR> 1=Part of the variable<BR> 2=Dangling</html>"
EditorType=numeric
Enabled=false
MaxVal=2
MinVal=0
Value=0
ValueDefault=0

[align_var_def_thresh]
CallName="align_var_def_thresh="
Category=3
Description="<html>The threshold for aligning variable definitions (0=no limit)</html>"
EditorType=numeric
Enabled=false
MaxVal=5000
MinVal=0
Value=0
ValueDefault=0

[align_var_struct_span]
CallName="align_var_struct_span="
Category=3
Description="<html>The span for aligning struct/union (0=don't align)</html>"
EditorType=numeric
Enabled=false
MaxVal=5000
MinVal=0
Value=0
ValueDefault=0

[align_var_struct_thresh]
CallName="align_var_struct_thresh="
Category=3
Description="<html>The threshold for aligning struct/union member definitions (0=no limit)</html>"
EditorType=numeric
Enabled=false
MaxVal=5000
MinVal=0
Value=0
ValueDefault=0

[align_with_tabs]
Category=3
Description=<html>Whether to use tabs for alinging</html>
EditorType=boolean
Enabled=false
TrueFalse="align_with_tabs=true|align_with_tabs=false"
Value=0
ValueDefault=0

[cmt_c_group]
Category=9
Description=<html>Whether to group c-comments that look like they are in a block</html>
EditorType=boolean
Enabled=false
TrueFalse="cmt_c_group=true|cmt_c_group=false"
Value=0
ValueDefault=0

[cmt_c_nl_end]
Category=9
Description=<html>Whether to put a newline before the closing '*/' of the combined c-comment</html>
EditorType=boolean
Enabled=false
TrueFalse="cmt_c_nl_end=true|cmt_c_nl_end=false"
Value=0
ValueDefault=0

[cmt_c_nl_start]
Category=9
Description=<html>Whether to put an empty '/*' on the first line of the combined c-comment</html>
EditorType=boolean
Enabled=false
TrueFalse="cmt_c_nl_start=true|cmt_c_nl_start=false"
Value=0
ValueDefault=0

[cmt_cpp_group]
Category=9
Description=<html>Whether to group cpp-comments that look like they are in a block</html>
EditorType=boolean
Enabled=false
TrueFalse="cmt_cpp_group=true|cmt_cpp_group=false"
Value=0
ValueDefault=0

[cmt_cpp_nl_end]
Category=9
Description=<html>Whether to put a newline before the closing '*/' of the combined cpp-comment</html>
EditorType=boolean
Enabled=false
TrueFalse="cmt_cpp_nl_end=true|cmt_cpp_nl_end=false"
Value=0
ValueDefault=0

[cmt_cpp_nl_start]
Category=9
Description=<html>Whether to put an empty '/*' on the first line of the combined cpp-comment</html>
EditorType=boolean
Enabled=false
TrueFalse="cmt_cpp_nl_start=true|cmt_cpp_nl_start=false"
Value=0
ValueDefault=0

[cmt_cpp_to_c]
Category=9
Description=<html>Whether to change cpp-comments into c-comments</html>
EditorType=boolean
Enabled=false
TrueFalse="cmt_cpp_to_c=true|cmt_cpp_to_c=false"
Value=0
ValueDefault=0

[cmt_insert_class_header]
Category=9
Description=<html>The filename that contains text to insert before a class if the class isn't preceeded with a C/C++ comment.<BR>Will substitue $(class) with the class name.</html>
Enabled=false
Value=0
ValueDefault=0

[cmt_insert_file_header]
Category=9
Description=<html>The filename that contains text to insert at the head of a file if the file doesn't start with a C/C++ comment.<BR>Will substitue $(filename) with the current file's name.</html>
Enabled=false
Value=0
ValueDefault=0

[cmt_insert_func_header]
Category=9
Description=<html>The filename that contains text to insert before a function implementation if the function isn't preceeded with a C/C++ comment.<BR>Will substitue $(function) with the function name and $(javaparam) with the javadoc @param and @return stuff.<BR>Will also substitute $(fclass) with the class name: void CFoo::Bar() { ... }</html>
Enabled=false
Value=0
ValueDefault=0

[cmt_sp_after_star_cont]
CallName="cmt_sp_after_star_cont="
Category=9
Description=<html>The number of spaces to insert after the star on subsequent comment lines</html>
EditorType=numeric
Enabled=false
MaxVal=16
MinVal=0
Value=0
ValueDefault=0

[cmt_sp_before_star_cont]
CallName="cmt_sp_before_star_cont="
Category=9
Description=<html>The number of spaces to insert at the start of subsequent comment lines</html>
EditorType=numeric
Enabled=false
MaxVal=16
MinVal=0
Value=0
ValueDefault=0

[cmt_star_cont]
Category=9
Description=<html>Whether to put a star on subsequent comment lines</html>
EditorType=boolean
Enabled=false
TrueFalse="cmt_star_cont=true|cmt_star_cont=false"
Value=0
ValueDefault=0

[cmt_width]
CallName="cmt_width="
Category=9
Description=<html>Try to wrap comments at cmt_witdth columns</html>
EditorType=numeric
Enabled=false
MaxVal=256
MinVal=16
Value=16
ValueDefault=0

[code_width]
CallName="code_width="
Category=6
Description=<html>Try to limit code width to N number of columns</html>
EditorType=numeric
Enabled=false
MaxVal=256
MinVal=16
Value=16
ValueDefault=0

[eat_blanks_after_open_brace]
Category=7
Description=<html>Whether to remove blank lines after '{'</html>
EditorType=boolean
Enabled=false
TrueFalse="eat_blanks_after_open_brace=true|eat_blanks_after_open_brace=false"
Value=0
ValueDefault=0

[eat_blanks_before_close_brace]
Category=7
Description=<html>Whether to remove blank lines before '}'</html>
EditorType=boolean
Enabled=false
TrueFalse="eat_blanks_before_close_brace=true|eat_blanks_before_close_brace=false"
Value=0
ValueDefault=0

[indent_access_spec]
CallName="indent_access_spec="
Category=1
Description="<html>Same as indent_label, but for access specifiers that are followed by a colon</html>"
EditorType=numeric
Enabled=false
MaxVal=16
MinVal=-16
Value=1
ValueDefault=1

[indent_align_string]
Category=1
Description=<html>Whether to indent strings broken by '' so that they line up</html>
EditorType=boolean
Enabled=false
TrueFalse="indent_align_string=true|indent_align_string=false"
Value=0
ValueDefault=0

[indent_bool_paren]
Category=1
Description="<html>Controls the indent of a BOOL operator when inside a paren.If TRUE, aligns under the open paren</html>"
EditorType=boolean
Enabled=false
TrueFalse="indent_bool_paren=true|indent_bool_paren=false"
Value=0
ValueDefault=0

[indent_brace]
CallName="indent_brace="
Category=1
Description=<html>Spaces to indent '{' from level</html>
EditorType=numeric
Enabled=false
MaxVal=16
MinVal=0
Value=0
ValueDefault=0

[indent_brace_parent]
Category=1
Description="<html>Indent based on the size of the brace parent, ie 'if' =&gt; 3 spaces, 'for' =&gt; 4 spaces, etc.</html>"
EditorType=boolean
Enabled=false
TrueFalse="indent_brace_parent=true|indent_brace_parent=false"
Value=0
ValueDefault=0

[indent_braces]
Category=1
Description=<html>Whether braces are indented to the body level</html>
EditorType=boolean
Enabled=false
TrueFalse="indent_braces=true|indent_braces=false"
Value=0
ValueDefault=0

[indent_braces_no_func]
Category=1
Description=<html>Disabled indenting function braces if indent_braces is true</html>
EditorType=boolean
Enabled=false
TrueFalse="indent_braces_no_func=true|indent_braces_no_func=false"
Value=0
ValueDefault=0

[indent_case_brace]
CallName="indent_case_brace="
Category=1
Description="<html>Spaces to indent '{' from 'case'.<BR>By default, the brace will appear under the 'c' in case.<BR>Usually set to 0 or indent_columns.</html>"
EditorType=numeric
Enabled=false
MaxVal=16
MinVal=0
Value=0
ValueDefault=0

[indent_case_shift]
CallName="indent_case_shift="
Category=1
Description="<html>Spaces to shift the 'case' line, without affecting any other lines<BR>Usually 0.</html>"
EditorType=numeric
Enabled=false
MaxVal=16
MinVal=0
Value=0
ValueDefault=0

[indent_class]
Category=1
Description=<html>Whether the 'class' body is indented</html>
EditorType=boolean
Enabled=false
TrueFalse="indent_class=true|indent_class=false"
Value=0
ValueDefault=0

[indent_class_colon]
Category=1
Description=<html>Whether to indent the stuff after a leading class colon</html>
EditorType=boolean
Enabled=false
TrueFalse="indent_class_colon=true|indent_class_colon=false"
Value=0
ValueDefault=0

[indent_col1_comment]
Category=1
Description=<html>Whether to indent comments found in first column</html>
EditorType=boolean
Enabled=false
TrueFalse="indent_col1_comment=true|indent_col1_comment=false"
Value=0
ValueDefault=0

[indent_columns]
CallName="indent_columns="
Category=1
Description="<html>The number of columns to indent per level.<BR>Usually 2, 3, 4, or 8.</html>"
EditorType=numeric
Enabled=false
MaxVal=16
MinVal=0
Value=4
ValueDefault=8

[indent_comma_paren]
Category=1
Description="<html>Controls the indent of a comma when inside a paren.If TRUE, aligns under the open paren</html>"
EditorType=boolean
Enabled=false
TrueFalse="indent_comma_paren=true|indent_comma_paren=false"
Value=0
ValueDefault=0

[indent_func_call_param]
Category=1
Description=<html>Whether to indent continued function call parameters one indent level (true) or aligns instead of indent (false)</html>
EditorType=boolean
Enabled=false
TrueFalse="indent_func_call_param=true|indent_func_call_param=false"
Value=0
ValueDefault=0

[indent_label]
CallName="indent_label="
Category=1
Description="<html>How to indent goto labels<BR> &gt;0 : absolute column where 1 is the leftmost column<BR> &lt;=0 : subtract from brace indent</html>"
EditorType=numeric
Enabled=false
MaxVal=16
MinVal=-16
Value=1
ValueDefault=1

[indent_member]
CallName="indent_member="
Category=1
Description="<html>The number of spaces to indent a continued '-&gt;' or '.'<BR>Usually set to 0, 1, or indent_columns.</html>"
EditorType=numeric
Enabled=false
MaxVal=16
MinVal=0
Value=0
ValueDefault=0

[indent_namespace]
Category=1
Description=<html>Whether the 'namespace' body is indented</html>
EditorType=boolean
Enabled=false
TrueFalse="indent_namespace=true|indent_namespace=false"
Value=0
ValueDefault=0

[indent_paren_close]
CallName="indent_paren_close="
Category=1
Description=<html>Controls the indent of a close paren after a newline.<BR>0: Indent to body level<BR>1: Align under the open paren<BR>2: Indent to the brace level</html>
EditorType=numeric
Enabled=false
MaxVal=16
MinVal=0
Value=0
ValueDefault=0

[indent_paren_nl]
Category=1
Description="<html>If an open paren is followed by a newline, indent the next line so that it lines up after the open paren (not recommended)</html>"
EditorType=boolean
Enabled=false
TrueFalse="indent_paren_nl=true|indent_paren_nl=false"
Value=0
ValueDefault=0

[indent_preserve_sql]
Category=1
Description=<html>Don't change the relative indent of ESQL/C 'EXEC SQL' bodies</html>
EditorType=boolean
Enabled=false
TrueFalse="indent_preserve_sql=true|indent_preserve_sql=false"
Value=0
ValueDefault=0

[indent_sing_line_comments]
CallName="indent_sing_line_comments="
Category=1
Description=<html>Spaces to indent single line ('//') comments on lines before code</html>
EditorType=numeric
Enabled=false
MaxVal=16
MinVal=0
Value=0
ValueDefault=0

[indent_square_nl]
Category=1
Description="<html>If an open square is followed by a newline, indent the next line so that it lines up after the open square (not recommended)</html>"
EditorType=boolean
Enabled=false
TrueFalse="indent_square_nl=true|indent_square_nl=false"
Value=0
ValueDefault=0

[indent_switch_case]
CallName="indent_switch_case="
Category=1
Description=<html>Spaces to indent 'case' from 'switch'<BR>Usually 0 or indent_columns.</html>
EditorType=numeric
Enabled=false
MaxVal=16
MinVal=0
Value=0
ValueDefault=0

[indent_with_tabs]
CallName="indent_with_tabs="
Category=1
Description="<html>How to use tabs when indenting code<BR>0=spaces only<BR>1=indent with tabs, align with spaces<BR>2=indent and align with tabs</html>"
EditorType=numeric
Enabled=false
MaxVal=2
MinVal=0
Value=0
ValueDefault=1

[indent_xml_string]
CallName="indent_xml_string="
Category=1
Description="<html>The number of spaces to indent multi-line XML strings.<BR>Requires indent_align_string=True</html>"
EditorType=numeric
Enabled=false
MaxVal=16
MinVal=0
Value=0
ValueDefault=0

[input_tab_size]
CallName="input_tab_size="
Category=0
Description=<html>The original size of tabs in the input</html>
EditorType=numeric
Enabled=true
MaxVal=32
MinVal=1
Value=4
ValueDefault=8

[ls_for_split_full]
Category=6
Description=<html>Whether to fully split long 'for' statements at semi-colons</html>
EditorType=boolean
Enabled=false
TrueFalse="ls_for_split_full=true|ls_for_split_full=false"
Value=0
ValueDefault=0

[ls_func_split_full]
Category=6
Description=<html>Whether to fully split long function protos/calls at commas</html>
EditorType=boolean
Enabled=false
TrueFalse="ls_func_split_full=true|ls_func_split_full=false"
Value=0
ValueDefault=0

[mod_full_brace_do]
Category=8
Choices="mod_full_brace_do=ignore|mod_full_brace_do=add|mod_full_brace_do=remove|mod_full_brace_do=force"
Description=<html>Add or remove braces on single-line 'do' statement</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[mod_full_brace_for]
Category=8
Choices="mod_full_brace_for=ignore|mod_full_brace_for=add|mod_full_brace_for=remove|mod_full_brace_for=force"
Description=<html>Add or remove braces on single-line 'for' statement</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[mod_full_brace_function]
Category=8
Choices="mod_full_brace_function=ignore|mod_full_brace_function=add|mod_full_brace_function=remove|mod_full_brace_function=force"
Description=<html>Add or remove braces on single-line function defintions. (Pawn)</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[mod_full_brace_if]
Category=8
Choices="mod_full_brace_if=ignore|mod_full_brace_if=add|mod_full_brace_if=remove|mod_full_brace_if=force"
Description=<html>Add or remove braces on single-line 'if' statement</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[mod_full_brace_nl]
CallName="mod_full_brace_nl="
Category=8
Description=<html>Don't remove braces around statements that span N newlines</html>
EditorType=numeric
Enabled=false
MaxVal=5000
MinVal=0
Value=0
ValueDefault=0

[mod_full_brace_while]
Category=8
Choices="mod_full_brace_while=ignore|mod_full_brace_while=add|mod_full_brace_while=remove|mod_full_brace_while=force"
Description=<html>Add or remove braces on single-line 'while' statement</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[mod_full_paren_if_bool]
Category=8
Description=<html>Add parens on 'while' and 'if' statement around bools</html>
EditorType=boolean
Enabled=false
TrueFalse="mod_full_paren_if_bool=true|mod_full_paren_if_bool=false"
Value=0
ValueDefault=0

[mod_paren_on_return]
Category=8
Choices="mod_paren_on_return=ignore|mod_paren_on_return=add|mod_paren_on_return=remove|mod_paren_on_return=force"
Description=<html>Add or remove unnecessary paren on 'return' statement</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[mod_pawn_semicolon]
Category=8
Description=<html>Whether to change optional semicolons to real semicolons</html>
EditorType=boolean
Enabled=false
TrueFalse="mod_pawn_semicolon=true|mod_pawn_semicolon=false"
Value=0
ValueDefault=0

[mod_remove_extra_semicolon]
Category=8
Description=<html>Whether to remove superfluous semicolons</html>
EditorType=boolean
Enabled=false
TrueFalse="mod_remove_extra_semicolon=true|mod_remove_extra_semicolon=false"
Value=0
ValueDefault=0

[newlines]
Category=0
Choices="newlines=lf|newlines=crlf|newlines=cr|newlines=auto"
ChoicesReadable=Newlines Mac|Newlines Win|Newlines Unix|Newlines Auto
Description=<html>The type of line endings</html>
EditorType=multiple
Enabled=false
Value=3
ValueDefault=3

[nl_after_access_spec]
CallName="nl_after_access_spec="
Category=7
Description="<html>The number of newlines after a 'private:', 'public:', 'protected:', 'signals:', or 'slots:' label.<BR>0 = No change.</html>"
EditorType=numeric
Enabled=false
MaxVal=16
MinVal=0
Value=0
ValueDefault=0

[nl_after_brace_open]
Category=4
Description=<html>Whether to put a newline after brace open.<BR>This also adds a newline before the matching brace close.</html>
EditorType=boolean
Enabled=false
TrueFalse="nl_after_brace_open=true|nl_after_brace_open=false"
Value=0
ValueDefault=0

[nl_after_brace_open_cmt]
Category=4
Description="<html>If nl_after_brace_open and nl_after_brace_open_cmt are true, a newline is<BR>placed between the open brace and a trailing single-line comment.</html>"
EditorType=boolean
Enabled=false
TrueFalse="nl_after_brace_open_cmt=true|nl_after_brace_open_cmt=false"
Value=0
ValueDefault=0

[nl_after_case]
Category=4
Description=<html>Whether to put a newline after 'case' statement</html>
EditorType=boolean
Enabled=false
TrueFalse="nl_after_case=true|nl_after_case=false"
Value=0
ValueDefault=0

[nl_after_do]
Category=4
Choices="nl_after_do=ignore|nl_after_do=add|nl_after_do=remove|nl_after_do=force"
Description=<html>Add or remove newline after 'do'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_after_for]
Category=4
Choices="nl_after_for=ignore|nl_after_for=add|nl_after_for=remove|nl_after_for=force"
Description=<html>Add or remove newline after 'for'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_after_func_body]
CallName="nl_after_func_body="
Category=7
Description=<html>The number of newlines after '}' of a multi-line function body</html>
EditorType=numeric
Enabled=false
MaxVal=16
MinVal=0
Value=0
ValueDefault=0

[nl_after_func_body_one_liner]
CallName="nl_after_func_body_one_liner="
Category=7
Description=<html>The number of newlines after '}' of a single line function body</html>
EditorType=numeric
Enabled=false
MaxVal=16
MinVal=0
Value=0
ValueDefault=0

[nl_after_func_proto]
CallName="nl_after_func_proto="
Category=7
Description="<html>The number of newlines after a function prototype, if followed by another function prototype</html>"
EditorType=numeric
Enabled=false
MaxVal=16
MinVal=0
Value=0
ValueDefault=0

[nl_after_func_proto_group]
CallName="nl_after_func_proto_group="
Category=7
Description="<html>The number of newlines after a function prototype, if not followed by another function prototype</html>"
EditorType=numeric
Enabled=false
MaxVal=16
MinVal=0
Value=0
ValueDefault=0

[nl_after_if]
Category=4
Choices="nl_after_if=ignore|nl_after_if=add|nl_after_if=remove|nl_after_if=force"
Description=<html>Add or remove newline after 'if'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_after_multiline_comment]
Category=7
Description=<html>Whether to force a newline after a mulit-line comment.</html>
EditorType=boolean
Enabled=false
TrueFalse="nl_after_multiline_comment=true|nl_after_multiline_comment=false"
Value=0
ValueDefault=0

[nl_after_return]
Category=4
Description=<html>Whether to put a newline after 'return' statement</html>
EditorType=boolean
Enabled=false
TrueFalse="nl_after_return=true|nl_after_return=false"
Value=0
ValueDefault=0

[nl_after_semicolon]
Category=4
Description="<html>Whether to put a newline after semicolons, except in 'for' statements</html>"
EditorType=boolean
Enabled=false
TrueFalse="nl_after_semicolon=true|nl_after_semicolon=false"
Value=0
ValueDefault=0

[nl_after_square_assign]
Category=4
Choices="nl_after_square_assign=ignore|nl_after_square_assign=add|nl_after_square_assign=remove|nl_after_square_assign=force"
Description="<html>Add or remove newline after '= [' (D only). Will also affect the newline before the ']'</html>"
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_after_switch]
Category=4
Choices="nl_after_switch=ignore|nl_after_switch=add|nl_after_switch=remove|nl_after_switch=force"
Description=<html>Add or remove newline after 'switch'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_after_vbrace_open]
Category=4
Description=<html>Whether to put a newline after a virtual brace open.<BR>These occur in un-braced if/while/do/for statement bodies.</html>
EditorType=boolean
Enabled=false
TrueFalse="nl_after_vbrace_open=true|nl_after_vbrace_open=false"
Value=0
ValueDefault=0

[nl_after_while]
Category=4
Choices="nl_after_while=ignore|nl_after_while=add|nl_after_while=remove|nl_after_while=force"
Description=<html>Add or remove newline after 'while'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_assign_brace]
Category=4
Choices="nl_assign_brace=ignore|nl_assign_brace=add|nl_assign_brace=remove|nl_assign_brace=force"
Description="<html>Add or remove newline between '=' and '{'</html>"
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_assign_leave_one_liners]
Category=4
Description="<html>Don't split one-line braced assignments - 'foo_t f = { 1, 2 };'</html>"
EditorType=boolean
Enabled=false
TrueFalse="nl_assign_leave_one_liners=true|nl_assign_leave_one_liners=false"
Value=0
ValueDefault=0

[nl_assign_square]
Category=4
Choices="nl_assign_square=ignore|nl_assign_square=add|nl_assign_square=remove|nl_assign_square=force"
Description="<html>Add or remove newline between '=' and '[' (D only)</html>"
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_before_access_spec]
CallName="nl_before_access_spec="
Category=7
Description="<html>The number of newlines before a 'private:', 'public:', 'protected:', 'signals:', or 'slots:' label.<BR>Will not change the newline count if after a brace open.<BR>0 = No change.</html>"
EditorType=numeric
Enabled=false
MaxVal=16
MinVal=0
Value=0
ValueDefault=0

[nl_before_block_comment]
CallName="nl_before_block_comment="
Category=7
Description=<html>The minimum number of newlines before a multi-line comment.<BR>Doesn't apply if after a brace open or another multi-line comment.</html>
EditorType=numeric
Enabled=false
MaxVal=16
MinVal=0
Value=0
ValueDefault=0

[nl_before_c_comment]
CallName="nl_before_c_comment="
Category=7
Description=<html>The minimum number of newlines before a single-line C comment.<BR>Doesn't apply if after a brace open or other single-line C comments.</html>
EditorType=numeric
Enabled=false
MaxVal=16
MinVal=0
Value=0
ValueDefault=0

[nl_before_case]
Category=4
Description=<html>Whether to put a newline before 'case' statement</html>
EditorType=boolean
Enabled=false
TrueFalse="nl_before_case=true|nl_before_case=false"
Value=0
ValueDefault=0

[nl_before_cpp_comment]
CallName="nl_before_cpp_comment="
Category=7
Description=<html>The minimum number of newlines before a CPP comment.<BR>Doesn't apply if after a brace open or other CPP comments.</html>
EditorType=numeric
Enabled=false
MaxVal=16
MinVal=0
Value=0
ValueDefault=0

[nl_before_do]
Category=4
Choices="nl_before_do=ignore|nl_before_do=add|nl_before_do=remove|nl_before_do=force"
Description=<html>Add or remove newline before 'do'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_before_for]
Category=4
Choices="nl_before_for=ignore|nl_before_for=add|nl_before_for=remove|nl_before_for=force"
Description=<html>Add or remove newline before 'for'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_before_if]
Category=4
Choices="nl_before_if=ignore|nl_before_if=add|nl_before_if=remove|nl_before_if=force"
Description=<html>Add or remove newline before 'if'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_before_switch]
Category=4
Choices="nl_before_switch=ignore|nl_before_switch=add|nl_before_switch=remove|nl_before_switch=force"
Description=<html>Add or remove newline before 'switch'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_before_while]
Category=4
Choices="nl_before_while=ignore|nl_before_while=add|nl_before_while=remove|nl_before_while=force"
Description=<html>Add or remove newline before 'while'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_brace_catch]
Category=4
Choices="nl_brace_catch=ignore|nl_brace_catch=add|nl_brace_catch=remove|nl_brace_catch=force"
Description=<html>Add or remove newline between '}' and 'catch'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_brace_else]
Category=4
Choices="nl_brace_else=ignore|nl_brace_else=add|nl_brace_else=remove|nl_brace_else=force"
Description=<html>Add or remove newline between '}' and 'else'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_brace_finally]
Category=4
Choices="nl_brace_finally=ignore|nl_brace_finally=add|nl_brace_finally=remove|nl_brace_finally=force"
Description=<html>Add or remove newline between '}' and 'finally'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_brace_while]
Category=4
Choices="nl_brace_while=ignore|nl_brace_while=add|nl_brace_while=remove|nl_brace_while=force"
Description=<html>Add or remove newline between '}' and 'while' of 'do' statement</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_catch_brace]
Category=4
Choices="nl_catch_brace=ignore|nl_catch_brace=add|nl_catch_brace=remove|nl_catch_brace=force"
Description=<html>Add or remove newline between 'catch' and '{'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_class_brace]
Category=4
Choices="nl_class_brace=ignore|nl_class_brace=add|nl_class_brace=remove|nl_class_brace=force"
Description=<html>Add or remove newline between 'class' and '{'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_class_colon]
Category=4
Choices="nl_class_colon=ignore|nl_class_colon=add|nl_class_colon=remove|nl_class_colon=force"
Description="<html>Add or remove a newline around a class colon.<BR>Related to pos_class_colon, nl_class_init_args, and pos_comma.</html>"
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_class_init_args]
Category=4
Choices="nl_class_init_args=ignore|nl_class_init_args=add|nl_class_init_args=remove|nl_class_init_args=force"
Description="<html>Add or remove newline after each ',' in the constructor member initialization</html>"
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_class_leave_one_liners]
Category=4
Description=<html>Don't split one-line braced statements inside a class xx { } body</html>
EditorType=boolean
Enabled=false
TrueFalse="nl_class_leave_one_liners=true|nl_class_leave_one_liners=false"
Value=0
ValueDefault=0

[nl_collapse_empty_body]
Category=4
Description=<html>Whether to collapse empty blocks between '{' and '}'</html>
EditorType=boolean
Enabled=false
TrueFalse="nl_collapse_empty_body=true|nl_collapse_empty_body=false"
Value=0
ValueDefault=0

[nl_create_for_one_liner]
Category=4
Description="<html>Change simple unbraced for statements into a one-liner<BR>'for (i=0;i&lt;5;i++)\n foo(i);' =&gt; 'for (i=0;i&lt;5;i++) foo(i);'</html>"
EditorType=boolean
Enabled=false
TrueFalse="nl_create_for_one_liner=true|nl_create_for_one_liner=false"
Value=0
ValueDefault=0

[nl_create_if_one_liner]
Category=4
Description="<html>Change simple unbraced if statements into a one-liner<BR>'if(b)\n i++;' =&gt; 'if(b) i++;'</html>"
EditorType=boolean
Enabled=false
TrueFalse="nl_create_if_one_liner=true|nl_create_if_one_liner=false"
Value=0
ValueDefault=0

[nl_create_while_one_liner]
Category=4
Description="<html>Change simple unbraced while statements into a one-liner<BR>'while (i&lt;5)\n foo(i++);' =&gt; 'while (i&lt;5) foo(i++);'</html>"
EditorType=boolean
Enabled=false
TrueFalse="nl_create_while_one_liner=true|nl_create_while_one_liner=false"
Value=0
ValueDefault=0

[nl_define_macro]
Category=4
Description=<html>Whether to alter newlines in '#define' macros</html>
EditorType=boolean
Enabled=false
TrueFalse="nl_define_macro=true|nl_define_macro=false"
Value=0
ValueDefault=0

[nl_do_brace]
Category=4
Choices="nl_do_brace=ignore|nl_do_brace=add|nl_do_brace=remove|nl_do_brace=force"
Description=<html>Add or remove newline between 'do' and '{'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_ds_struct_enum_close_brace]
Category=4
Description=<html>Whether to double-space before the close brace of a struct/union/enum</html>
EditorType=boolean
Enabled=false
TrueFalse="nl_ds_struct_enum_close_brace=true|nl_ds_struct_enum_close_brace=false"
Value=0
ValueDefault=0

[nl_ds_struct_enum_cmt]
Category=4
Description=<html>Whether to double-space commented-entries in struct/enum</html>
EditorType=boolean
Enabled=false
TrueFalse="nl_ds_struct_enum_cmt=true|nl_ds_struct_enum_cmt=false"
Value=0
ValueDefault=0

[nl_else_brace]
Category=4
Choices="nl_else_brace=ignore|nl_else_brace=add|nl_else_brace=remove|nl_else_brace=force"
Description=<html>Add or remove newline between 'else' and '{'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_elseif_brace]
Category=4
Choices="nl_elseif_brace=ignore|nl_elseif_brace=add|nl_elseif_brace=remove|nl_elseif_brace=force"
Description="<html>Add or remove newline between 'else if' and '{'<BR>If set to ignore, nl_if_brace is used instead</html>"
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_end_of_file]
Category=4
Choices="nl_end_of_file=ignore|nl_end_of_file=add|nl_end_of_file=remove|nl_end_of_file=force"
Description=<html>Add or remove newline at the end of the file</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_end_of_file_min]
CallName="nl_end_of_file_min="
Category=4
Description=<html>The number of newlines at the end of the file (only used if nl_end_of_file is 'add' or 'force')</html>
EditorType=numeric
Enabled=false
MaxVal=16
MinVal=0
Value=0
ValueDefault=0

[nl_enum_brace]
Category=4
Choices="nl_enum_brace=ignore|nl_enum_brace=add|nl_enum_brace=remove|nl_enum_brace=force"
Description=<html>Add or remove newline between 'enum' and '{'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_enum_leave_one_liners]
Category=4
Description="<html>Don't split one-line enums: 'enum foo { BAR = 15 };'</html>"
EditorType=boolean
Enabled=false
TrueFalse="nl_enum_leave_one_liners=true|nl_enum_leave_one_liners=false"
Value=0
ValueDefault=0

[nl_fcall_brace]
Category=4
Choices="nl_fcall_brace=ignore|nl_fcall_brace=add|nl_fcall_brace=remove|nl_fcall_brace=force"
Description="<html>Add or remove newline between a function call's ')' and '{', as in:<BR>list_for_each(item, &amp;list) { }</html>"
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_fdef_brace]
Category=4
Choices="nl_fdef_brace=ignore|nl_fdef_brace=add|nl_fdef_brace=remove|nl_fdef_brace=force"
Description=<html>Add or remove newline between function signature and '{'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_finally_brace]
Category=4
Choices="nl_finally_brace=ignore|nl_finally_brace=add|nl_finally_brace=remove|nl_finally_brace=force"
Description=<html>Add or remove newline between 'finally' and '{'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_for_brace]
Category=4
Choices="nl_for_brace=ignore|nl_for_brace=add|nl_for_brace=remove|nl_for_brace=force"
Description=<html>Add or remove newline between 'for' and '{'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_func_decl_args]
Category=4
Choices="nl_func_decl_args=ignore|nl_func_decl_args=add|nl_func_decl_args=remove|nl_func_decl_args=force"
Description="<html>Add or remove newline after each ',' in a function declaration</html>"
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_func_decl_end]
Category=4
Choices="nl_func_decl_end=ignore|nl_func_decl_end=add|nl_func_decl_end=remove|nl_func_decl_end=force"
Description=<html>Add or remove newline before the ')' in a function declaration</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_func_decl_start]
Category=4
Choices="nl_func_decl_start=ignore|nl_func_decl_start=add|nl_func_decl_start=remove|nl_func_decl_start=force"
Description=<html>Add or remove newline after '(' in a function declaration</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_func_leave_one_liners]
Category=4
Description="<html>Don't split one-line function definitions - 'int foo() { return 0; }'</html>"
EditorType=boolean
Enabled=false
TrueFalse="nl_func_leave_one_liners=true|nl_func_leave_one_liners=false"
Value=0
ValueDefault=0

[nl_func_paren]
Category=4
Choices="nl_func_paren=ignore|nl_func_paren=add|nl_func_paren=remove|nl_func_paren=force"
Description=<html>Add or remove newline between a function name and the opening '('</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_func_type_name]
Category=4
Choices="nl_func_type_name=ignore|nl_func_type_name=add|nl_func_type_name=remove|nl_func_type_name=force"
Description=<html>Add or remove newline between return type and function name in definition</html>
EditorType=multiple
Enabled=false
Value=2
ValueDefault=0

[nl_func_var_def_blk]
CallName="nl_func_var_def_blk="
Category=4
Description=<html>The number of newlines after a block of variable definitions</html>
EditorType=numeric
Enabled=false
MaxVal=16
MinVal=0
Value=0
ValueDefault=0

[nl_getset_brace]
Category=4
Choices="nl_getset_brace=ignore|nl_getset_brace=add|nl_getset_brace=remove|nl_getset_brace=force"
Description=<html>Add or remove newline between get/set and '{'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_getset_leave_one_liners]
Category=4
Description=<html>Don't split one-line get or set functions</html>
EditorType=boolean
Enabled=false
TrueFalse="nl_getset_leave_one_liners=true|nl_getset_leave_one_liners=false"
Value=0
ValueDefault=0

[nl_if_brace]
Category=4
Choices="nl_if_brace=ignore|nl_if_brace=add|nl_if_brace=remove|nl_if_brace=force"
Description=<html>Add or remove newline between 'if' and '{'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_if_leave_one_liners]
Category=4
Description="<html>Don't split one-line if/else statements - 'if(a) b++;'</html>"
EditorType=boolean
Enabled=false
TrueFalse="nl_if_leave_one_liners=true|nl_if_leave_one_liners=false"
Value=0
ValueDefault=0

[nl_max]
CallName="nl_max="
Category=7
Description=<html>The maximum consecutive newlines</html>
EditorType=numeric
Enabled=false
MaxVal=16
MinVal=0
Value=0
ValueDefault=0

[nl_multi_line_cond]
Category=4
Description=<html>Add or remove newline when condition spans two or more lines</html>
EditorType=boolean
Enabled=false
TrueFalse="nl_multi_line_cond=true|nl_multi_line_cond=false"
Value=0
ValueDefault=0

[nl_namespace_brace]
Category=4
Choices="nl_namespace_brace=ignore|nl_namespace_brace=add|nl_namespace_brace=remove|nl_namespace_brace=force"
Description=<html>Newline between namespace and {</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_squeeze_ifdef]
Category=4
Description="<html>Whether to not put blanks after '#ifxx', '#elxx', or before '#endif'</html>"
EditorType=boolean
Enabled=false
TrueFalse="nl_squeeze_ifdef=true|nl_squeeze_ifdef=false"
Value=0
ValueDefault=0

[nl_start_of_file]
Category=4
Choices="nl_start_of_file=ignore|nl_start_of_file=add|nl_start_of_file=remove|nl_start_of_file=force"
Description=<html>Add or remove newlines at the start of the file</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_start_of_file_min]
CallName="nl_start_of_file_min="
Category=4
Description=<html>The number of newlines at the start of the file (only used if nl_start_of_file is 'add' or 'force'</html>
EditorType=numeric
Enabled=false
MaxVal=16
MinVal=0
Value=0
ValueDefault=0

[nl_struct_brace]
Category=4
Choices="nl_struct_brace=ignore|nl_struct_brace=add|nl_struct_brace=remove|nl_struct_brace=force"
Description=<html>Add or remove newline between 'struct and '{'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_switch_brace]
Category=4
Choices="nl_switch_brace=ignore|nl_switch_brace=add|nl_switch_brace=remove|nl_switch_brace=force"
Description=<html>Add or remove newline between 'switch' and '{'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_template_class]
Category=4
Choices="nl_template_class=ignore|nl_template_class=add|nl_template_class=remove|nl_template_class=force"
Description="<html>Add or remove newline between 'template&lt;&gt;' and 'class'</html>"
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_try_brace]
Category=4
Choices="nl_try_brace=ignore|nl_try_brace=add|nl_try_brace=remove|nl_try_brace=force"
Description=<html>Add or remove newline between 'try' and '{'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_union_brace]
Category=4
Choices="nl_union_brace=ignore|nl_union_brace=add|nl_union_brace=remove|nl_union_brace=force"
Description=<html>Add or remove newline between 'union' and '{'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[nl_while_brace]
Category=4
Choices="nl_while_brace=ignore|nl_while_brace=add|nl_while_brace=remove|nl_while_brace=force"
Description=<html>Add or remove newline between 'while' and '{'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[output_tab_size]
CallName="output_tab_size="
Category=0
Description="<html>The size of tabs in the output (only used if align_with_tabs=true)</html>"
EditorType=numeric
Enabled=true
MaxVal=32
MinVal=1
Value=4
ValueDefault=8

[pos_bool]
Category=5
Choices="pos_bool=ignore|pos_bool=lead|pos_bool=trail"
Description=<html>The position of boolean operators in wrapped expressions</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[pos_class_colon]
Category=5
Choices="pos_class_colon=ignore|pos_class_colon=lead|pos_class_colon=trail"
Description=<html>The position of colons between constructor and member initialization</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[pos_class_comma]
Category=5
Choices="pos_class_comma=ignore|pos_class_comma=lead|pos_class_comma=trail"
Description=<html>The position of the comma in the constructor initialization list</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[pos_comma]
Category=5
Choices="pos_comma=ignore|pos_comma=lead|pos_comma=trail"
Description=<html>The position of the comma in wrapped expressions</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[pp_define_at_level]
Category=10
Description=<html>Whether to indent '#define' at the brace level (true) or from column 1 (false)</html>
EditorType=boolean
Enabled=false
TrueFalse="pp_define_at_level=true|pp_define_at_level=false"
Value=0
ValueDefault=0

[pp_if_indent_code]
Category=10
Description="<html>Control whether to indent the code between #if, #else and #endif when not at file-level</html>"
EditorType=boolean
Enabled=false
TrueFalse="pp_if_indent_code=true|pp_if_indent_code=false"
Value=0
ValueDefault=0

[pp_indent]
Category=10
Choices="pp_indent=ignore|pp_indent=add|pp_indent=remove|pp_indent=force"
Description=<html>Control indent of preprocessors inside #if blocks at brace level 0</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[pp_indent_at_level]
Category=10
Description=<html>Whether to indent #if/#else/#endif at the brace level (true) or from column 1 (false)</html>
EditorType=boolean
Enabled=false
TrueFalse="pp_indent_at_level=true|pp_indent_at_level=false"
Value=0
ValueDefault=0

[pp_indent_if]
CallName="pp_indent_if="
Category=10
Description="<html>If pp_indent_at_level=true, sets the indent for #if, #else, and #endif when not at file-level</html>"
EditorType=numeric
Enabled=false
MaxVal=16
MinVal=0
Value=0
ValueDefault=0

[pp_indent_region]
CallName="pp_indent_region="
Category=10
Description=<html>The indent for #region and #endregion in C# and '#pragma region' in C/C++</html>
EditorType=numeric
Enabled=false
MaxVal=16
MinVal=0
Value=0
ValueDefault=0

[pp_region_indent_code]
Category=10
Description=<html>Whether to indent the code between #region and #endregion</html>
EditorType=boolean
Enabled=false
TrueFalse="pp_region_indent_code=true|pp_region_indent_code=false"
Value=0
ValueDefault=0

[pp_space]
Category=10
Choices="pp_space=ignore|pp_space=add|pp_space=remove|pp_space=force"
Description=<html>Add or remove space after # based on pp_level of #if blocks</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[pp_space_count]
CallName="pp_space_count="
Category=10
Description=<html>Sets the number of spaces added with pp_space</html>
EditorType=numeric
Enabled=false
MaxVal=16
MinVal=0
Value=0
ValueDefault=0

[sp_addr]
Category=2
Choices="sp_addr=ignore|sp_addr=add|sp_addr=remove|sp_addr=force"
Description="<html>Add or remove space after the '&amp;' (address-of) operator.<BR>This does not affect the spacing after a '&amp;' that is part of a type.</html>"
EditorType=multiple
Enabled=false
Value=2
ValueDefault=2

[sp_after_angle]
Category=2
Choices="sp_after_angle=ignore|sp_after_angle=add|sp_after_angle=remove|sp_after_angle=force"
Description="<html>Add or remove space after '&lt;&gt;'</html>"
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_after_byref]
Category=2
Choices="sp_after_byref=ignore|sp_after_byref=add|sp_after_byref=remove|sp_after_byref=force"
Description="<html>Add or remove space after reference sign '&amp;', if followed by a word.</html>"
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_after_cast]
Category=2
Choices="sp_after_cast=ignore|sp_after_cast=add|sp_after_cast=remove|sp_after_cast=force"
Description=<html>Add or remove space after cast</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_after_comma]
Category=2
Choices="sp_after_comma=ignore|sp_after_comma=add|sp_after_comma=remove|sp_after_comma=force"
Description="<html>Add or remove space after ','</html>"
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_after_dc]
Category=2
Choices="sp_after_dc=ignore|sp_after_dc=add|sp_after_dc=remove|sp_after_dc=force"
Description=<html>Add or remove space after the '::' operator</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_after_operator]
Category=2
Choices="sp_after_operator=ignore|sp_after_operator=add|sp_after_operator=remove|sp_after_operator=force"
Description=<html>Add or remove space between 'operator' and operator sign</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_after_ptr_star]
Category=2
Choices="sp_after_ptr_star=ignore|sp_after_ptr_star=add|sp_after_ptr_star=remove|sp_after_ptr_star=force"
Description="<html>Add or remove space after pointer star '*', if followed by a word.</html>"
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_after_semi_for_empty]
Category=2
Choices="sp_after_semi_for_empty=ignore|sp_after_semi_for_empty=add|sp_after_semi_for_empty=remove|sp_after_semi_for_empty=force"
Description="<html>Add or remove space after the final semicolon of an empty part of a for statment: for ( ; ; &lt;here&gt; ).</html>"
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_after_sparen]
Category=2
Choices="sp_after_sparen=ignore|sp_after_sparen=add|sp_after_sparen=remove|sp_after_sparen=force"
Description="<html>Add or remove space after ')' of 'if', 'for', 'switch', and 'while'</html>"
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_after_tag]
Category=2
Choices="sp_after_tag=ignore|sp_after_tag=add|sp_after_tag=remove|sp_after_tag=force"
Description=<html>Add or remove space after the tag keyword (Pawn)</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_angle_paren]
Category=2
Choices="sp_angle_paren=ignore|sp_angle_paren=add|sp_angle_paren=remove|sp_angle_paren=force"
Description="<html>Add or remove space between '&lt;&gt;' and '(' as found in 'new List&lt;byte&gt;();'</html>"
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_angle_word]
Category=2
Choices="sp_angle_word=ignore|sp_angle_word=add|sp_angle_word=remove|sp_angle_word=force"
Description="<html>Add or remove space between '&lt;&gt;' and a word as in 'List&lt;byte&gt; m;'</html>"
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_arith]
Category=2
Choices="sp_arith=ignore|sp_arith=add|sp_arith=remove|sp_arith=force"
Description="<html>Add or remove space around arithmetic operator '+', '-', '/', '*', etc</html>"
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_assign]
Category=2
Choices="sp_assign=ignore|sp_assign=add|sp_assign=remove|sp_assign=force"
Description="<html>Add or remove space around assignment operator '=', '+=', etc</html>"
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_attribute_paren]
Category=2
Choices="sp_attribute_paren=ignore|sp_attribute_paren=add|sp_attribute_paren=remove|sp_attribute_paren=force"
Description=<html>Add or remove space between '__attribute__' and '('</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_balance_nested_parens]
Category=2
Description=<html>Whether to balance spaces inside nested parens</html>
EditorType=boolean
Enabled=false
TrueFalse="sp_balance_nested_parens=true|sp_balance_nested_parens=false"
Value=0
ValueDefault=0

[sp_before_angle]
Category=2
Choices="sp_before_angle=ignore|sp_before_angle=add|sp_before_angle=remove|sp_before_angle=force"
Description="<html>Add or remove space before '&lt;&gt;'</html>"
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_before_byref]
Category=2
Choices="sp_before_byref=ignore|sp_before_byref=add|sp_before_byref=remove|sp_before_byref=force"
Description="<html>Add or remove space before reference sign '&amp;'</html>"
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_before_comma]
Category=2
Choices="sp_before_comma=ignore|sp_before_comma=add|sp_before_comma=remove|sp_before_comma=force"
Description="<html>Add or remove space before ','</html>"
EditorType=multiple
Enabled=false
Value=2
ValueDefault=2

[sp_before_dc]
Category=2
Choices="sp_before_dc=ignore|sp_before_dc=add|sp_before_dc=remove|sp_before_dc=force"
Description=<html>Add or remove space before the '::' operator</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_before_ptr_star]
Category=2
Choices="sp_before_ptr_star=ignore|sp_before_ptr_star=add|sp_before_ptr_star=remove|sp_before_ptr_star=force"
Description=<html>Add or remove space before pointer star '*'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_before_semi]
Category=2
Choices="sp_before_semi=ignore|sp_before_semi=add|sp_before_semi=remove|sp_before_semi=force"
Description="<html>Add or remove space before ';'</html>"
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_before_semi_for]
Category=2
Choices="sp_before_semi_for=ignore|sp_before_semi_for=add|sp_before_semi_for=remove|sp_before_semi_for=force"
Description="<html>Add or remove space before ';' in non-empty 'for' statements</html>"
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_before_semi_for_empty]
Category=2
Choices="sp_before_semi_for_empty=ignore|sp_before_semi_for_empty=add|sp_before_semi_for_empty=remove|sp_before_semi_for_empty=force"
Description=<html>Add or remove space before a semicolon of an empty part of a for statment.</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_before_sparen]
Category=2
Choices="sp_before_sparen=ignore|sp_before_sparen=add|sp_before_sparen=remove|sp_before_sparen=force"
Description="<html>Add or remove space before '(' of 'if', 'for', 'switch', and 'while'</html>"
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_before_square]
Category=2
Choices="sp_before_square=ignore|sp_before_square=add|sp_before_square=remove|sp_before_square=force"
Description=<html>Add or remove space before '[' (except '[]')</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_before_squares]
Category=2
Choices="sp_before_squares=ignore|sp_before_squares=add|sp_before_squares=remove|sp_before_squares=force"
Description=<html>Add or remove space before '[]'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_between_ptr_star]
Category=2
Choices="sp_between_ptr_star=ignore|sp_between_ptr_star=add|sp_between_ptr_star=remove|sp_between_ptr_star=force"
Description=<html>Add or remove space between pointer stars '*'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_bool]
Category=2
Choices="sp_bool=ignore|sp_bool=add|sp_bool=remove|sp_bool=force"
Description="<html>Add or remove space around boolean operators '&amp;&amp;' and '||'</html>"
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_brace_catch]
Category=2
Choices="sp_brace_catch=ignore|sp_brace_catch=add|sp_brace_catch=remove|sp_brace_catch=force"
Description=<html>Add or remove space between '}' and 'catch' if on the same line</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_brace_else]
Category=2
Choices="sp_brace_else=ignore|sp_brace_else=add|sp_brace_else=remove|sp_brace_else=force"
Description=<html>Add or remove space between '}' and 'else' if on the same line</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_brace_finally]
Category=2
Choices="sp_brace_finally=ignore|sp_brace_finally=add|sp_brace_finally=remove|sp_brace_finally=force"
Description=<html>Add or remove space between '}' and 'finally' if on the same line</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_catch_brace]
Category=2
Choices="sp_catch_brace=ignore|sp_catch_brace=add|sp_catch_brace=remove|sp_catch_brace=force"
Description=<html>Add or remove space between 'catch' and '{' if on the same line</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_compare]
Category=2
Choices="sp_compare=ignore|sp_compare=add|sp_compare=remove|sp_compare=force"
Description="<html>Add or remove space around compare operator '&lt;', '&gt;', '==', etc</html>"
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_d_array_colon]
Category=2
Choices="sp_d_array_colon=ignore|sp_d_array_colon=add|sp_d_array_colon=remove|sp_d_array_colon=force"
Description=<html>Add or remove around the D named array initializer ':' operator</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_deref]
Category=2
Choices="sp_deref=ignore|sp_deref=add|sp_deref=remove|sp_deref=force"
Description=<html>Add or remove space after the '*' (dereference) operator.<BR>This does not affect the spacing after a '*' that is part of a type.</html>
EditorType=multiple
Enabled=false
Value=2
ValueDefault=2

[sp_else_brace]
Category=2
Choices="sp_else_brace=ignore|sp_else_brace=add|sp_else_brace=remove|sp_else_brace=force"
Description=<html>Add or remove space between 'else' and '{' if on the same line</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_finally_brace]
Category=2
Choices="sp_finally_brace=ignore|sp_finally_brace=add|sp_finally_brace=remove|sp_finally_brace=force"
Description=<html>Add or remove space between 'finally' and '{' if on the same line</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_fparen_brace]
Category=2
Choices="sp_fparen_brace=ignore|sp_fparen_brace=add|sp_fparen_brace=remove|sp_fparen_brace=force"
Description=<html>Add or remove space between ')' and '{' of function</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_func_call_paren]
Category=2
Choices="sp_func_call_paren=ignore|sp_func_call_paren=add|sp_func_call_paren=remove|sp_func_call_paren=force"
Description=<html>Add or remove space between function name and '(' on function calls</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_func_class_paren]
Category=2
Choices="sp_func_class_paren=ignore|sp_func_class_paren=add|sp_func_class_paren=remove|sp_func_class_paren=force"
Description=<html>Add or remove space between a constructor/destructor and the open paren</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_func_def_paren]
Category=2
Choices="sp_func_def_paren=ignore|sp_func_def_paren=add|sp_func_def_paren=remove|sp_func_def_paren=force"
Description=<html>Add or remove space between function name and '(' on function definition</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_func_proto_paren]
Category=2
Choices="sp_func_proto_paren=ignore|sp_func_proto_paren=add|sp_func_proto_paren=remove|sp_func_proto_paren=force"
Description=<html>Add or remove space between function name and '(' on function declaration</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_getset_brace]
Category=2
Choices="sp_getset_brace=ignore|sp_getset_brace=add|sp_getset_brace=remove|sp_getset_brace=force"
Description=<html>Add or remove space between get/set and '{' if on the same line</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_inside_angle]
Category=2
Choices="sp_inside_angle=ignore|sp_inside_angle=add|sp_inside_angle=remove|sp_inside_angle=force"
Description="<html>Add or remove space inside '&lt;' and '&gt;'</html>"
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_inside_braces]
Category=2
Choices="sp_inside_braces=ignore|sp_inside_braces=add|sp_inside_braces=remove|sp_inside_braces=force"
Description=<html>Add or remove space inside '{' and '}'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_inside_braces_enum]
Category=2
Choices="sp_inside_braces_enum=ignore|sp_inside_braces_enum=add|sp_inside_braces_enum=remove|sp_inside_braces_enum=force"
Description=<html>Add or remove space inside enum '{' and '}'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_inside_braces_struct]
Category=2
Choices="sp_inside_braces_struct=ignore|sp_inside_braces_struct=add|sp_inside_braces_struct=remove|sp_inside_braces_struct=force"
Description=<html>Add or remove space inside struct/union '{' and '}'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_inside_fparen]
Category=2
Choices="sp_inside_fparen=ignore|sp_inside_fparen=add|sp_inside_fparen=remove|sp_inside_fparen=force"
Description=<html>Add or remove space inside function '(' and ')'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_inside_fparens]
Category=2
Choices="sp_inside_fparens=ignore|sp_inside_fparens=add|sp_inside_fparens=remove|sp_inside_fparens=force"
Description=<html>Add or remove space inside empty function '()'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_inside_paren]
Category=2
Choices="sp_inside_paren=ignore|sp_inside_paren=add|sp_inside_paren=remove|sp_inside_paren=force"
Description=<html>Add or remove space inside '(' and ')'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_inside_paren_cast]
Category=2
Choices="sp_inside_paren_cast=ignore|sp_inside_paren_cast=add|sp_inside_paren_cast=remove|sp_inside_paren_cast=force"
Description=<html>Add or remove spaces inside cast parens</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_inside_sparen]
Category=2
Choices="sp_inside_sparen=ignore|sp_inside_sparen=add|sp_inside_sparen=remove|sp_inside_sparen=force"
Description=<html>Add or remove space inside if-condition '(' and ')'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_inside_square]
Category=2
Choices="sp_inside_square=ignore|sp_inside_square=add|sp_inside_square=remove|sp_inside_square=force"
Description=<html>Add or remove space inside '[' and ']'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_inv]
Category=2
Choices="sp_inv=ignore|sp_inv=add|sp_inv=remove|sp_inv=force"
Description=<html>Add or remove space after the '~' (invert) operator.</html>
EditorType=multiple
Enabled=false
Value=2
ValueDefault=2

[sp_macro]
Category=2
Choices="sp_macro=ignore|sp_macro=add|sp_macro=remove|sp_macro=force"
Description=<html>Add or remove space between macro and value</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_macro_func]
Category=2
Choices="sp_macro_func=ignore|sp_macro_func=add|sp_macro_func=remove|sp_macro_func=force"
Description=<html>Add or remove space between macro function ')' and value</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_not]
Category=2
Choices="sp_not=ignore|sp_not=add|sp_not=remove|sp_not=force"
Description=<html>Add or remove space after the '!' (not) operator.</html>
EditorType=multiple
Enabled=false
Value=2
ValueDefault=2

[sp_paren_brace]
Category=2
Choices="sp_paren_brace=ignore|sp_paren_brace=add|sp_paren_brace=remove|sp_paren_brace=force"
Description=<html>Add or remove space between ')' and '{'</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_paren_paren]
Category=2
Choices="sp_paren_paren=ignore|sp_paren_paren=add|sp_paren_paren=remove|sp_paren_paren=force"
Description=<html>Add or remove space between nested parens</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_return_paren]
Category=2
Choices="sp_return_paren=ignore|sp_return_paren=add|sp_return_paren=remove|sp_return_paren=force"
Description=<html>Add or remove space between 'return' and '('</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_sizeof_paren]
Category=2
Choices="sp_sizeof_paren=ignore|sp_sizeof_paren=add|sp_sizeof_paren=remove|sp_sizeof_paren=force"
Description=<html>Add or remove space between 'sizeof' and '('</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_sparen_brace]
Category=2
Choices="sp_sparen_brace=ignore|sp_sparen_brace=add|sp_sparen_brace=remove|sp_sparen_brace=force"
Description="<html>Add or remove space between ')' and '{' of 'if', 'for', 'switch', and 'while'</html>"
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_special_semi]
Category=2
Choices="sp_special_semi=ignore|sp_special_semi=add|sp_special_semi=remove|sp_special_semi=force"
Description="<html>Add or remove space before empty statement ';' on 'if', 'for' and 'while'</html>"
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_square_fparen]
Category=2
Choices="sp_square_fparen=ignore|sp_square_fparen=add|sp_square_fparen=remove|sp_square_fparen=force"
Description=<html>Add or remove space between ']' and '(' when part of a function call.</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_try_brace]
Category=2
Choices="sp_try_brace=ignore|sp_try_brace=add|sp_try_brace=remove|sp_try_brace=force"
Description=<html>Add or remove space between 'try' and '{' if on the same line</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[sp_type_func]
Category=2
Choices="sp_type_func=ignore|sp_type_func=add|sp_type_func=remove|sp_type_func=force"
Description=<html>Add or remove space between return type and function name<BR>A minimum of 1 is forced except for pointer return types.</html>
EditorType=multiple
Enabled=false
Value=0
ValueDefault=0

[string_escape_char]
CallName="string_escape_char="
Category=0
Description="<html>The ascii value of the string escape char, usually 92 ( or 94 (^). (Pawn)</html>"
EditorType=numeric
Enabled=false
MaxVal=255
MinVal=0
Value=92
ValueDefault=92

[string_escape_char2]
CallName="string_escape_char2="
Category=0
Description=<html>Alternate string escape char for Pawn. Only works right before the quote char.</html>
EditorType=numeric
Enabled=false
MaxVal=255
MinVal=0
Value=0
ValueDefault=0
